import React from 'react';
import {
  Typography,
  Button,
  Alert,
  Progress,
  Spinner,
} from '@material-tailwind/react';
import {
  DocumentArrowUpIcon,
  SparklesIcon,
} from '@heroicons/react/24/outline';
import RichTextEditor from '../../editor/RichTextEditor';

/**
 * Component: Content editor v·ªõi Gemini AI PDF parsing
 */
const LessonContentEditor = ({
  content,
  error,
  onChange,
  onFileUpload,
  isParsing,
}) => {
  return (
    <div>
      {/* Header with PDF Upload Button */}
      <div className="flex justify-between items-center mb-3">
        <div className="flex items-center space-x-2">
          <input
            type="file"
            id="pdf-upload"
            accept=".pdf,.docx"
            onChange={onFileUpload}
            className="hidden"
          />
          <Button
            size="sm"
            variant="gradient"
            color="purple"
            onClick={() => document.getElementById("pdf-upload").click()}
            disabled={isParsing}
            className="flex items-center shadow-lg"
          >
            {isParsing ? (
              <>
                <Spinner className="h-4 w-4 mr-2" />
                AI ƒëang x·ª≠ l√Ω...
              </>
            ) : (
              <>
                <SparklesIcon className="h-4 w-4 mr-2" />
                Parse v·ªõi Gemini AI
              </>
            )}
          </Button>
        </div>
      </div>

      {/* Parsing Progress */}
      {isParsing && (
        <Alert color="blue" className="mb-4">
          <div className="flex items-center space-x-2 mb-2">
            <Spinner className="h-4 w-4" />
            <Typography variant="small" className="font-medium">
              ü§ñ Gemini AI ƒëang ph√¢n t√≠ch file c·ªßa b·∫°n...
            </Typography>
          </div>
          <Typography variant="small" className="opacity-80 mb-2">
            AI ƒëang ƒë·ªçc, ph√¢n t√≠ch c·∫•u tr√∫c v√† t·∫°o lessons t·ª± ƒë·ªông
          </Typography>
          <Progress value={50} color="blue" size="sm" />
        </Alert>
      )}

      {/* Rich Text Editor - TipTap */}
      <RichTextEditor
        value={content}
        onChange={onChange}
        label="N·ªôi dung b√†i h·ªçc"
        placeholder="Nh·∫≠p n·ªôi dung l√Ω thuy·∫øt ho·∫∑c s·ª≠ d·ª•ng Gemini AI ƒë·ªÉ parse t·ª´ PDF..."
        error={error}
        required={true}
        height="450px"
      />

      {/* Hint */}
      <Typography variant="small" color="blue-gray" className="mt-2 opacity-60">
        üí° M·∫πo: B·∫°n c√≥ th·ªÉ upload file PDF/DOCX v√† Gemini AI s·∫Ω t·ª± ƒë·ªông ph√¢n t√≠ch th√†nh b√†i h·ªçc
      </Typography>
    </div>
  );
};

export default LessonContentEditor;